(function (d3) {
  'use strict';

  const svg = d3.select('svg');

  const width = +svg.attr('width');
  const height = +svg.attr('height');

  const render = data => {
      const xValue = d => d.population;
      const yValue = d => d.country;
      const margin = { top: 50, right: 40, bottom: 75, left: 170 };
      const innerWidth = width - margin.left - margin.right;
      const innerHeight = height - margin.top - margin.bottom;

      const xScale = d3.scaleLinear()
          .domain([0, d3.max(data, xValue)])
          .range([0, innerWidth]);

      const yScale = d3.scaleBand()
          .domain(data.map(yValue))
          .range([0, innerHeight])
          .padding(0.1);

      const g = svg.append('g')
          .attr('transform', `translate(${margin.left},${margin.top})`);
  		
    	const xAxisTickFormat = number => 
      	d3.format('.3s')(number)
      		.replace('G', 'B');
    
    	const xAxis = d3.axisBottom(xScale)
      	.tickFormat(xAxisTickFormat)
      	.tickSize(- innerHeight);
    
      g.append('g')
        .call(d3.axisLeft(yScale))
    		.selectAll('.domain, .tick line')
    			.remove();
    	
      const xAxisG = g.append('g').call(xAxis)
      	.attr('transform', `translate(0,${innerHeight})`);
    
    	xAxisG.select('.domain').remove();  
    
  		xAxisG.append('text')
    		.attr('class', 'axis-label')
    		.attr('y', 60)
    		.attr('x', innerWidth / 2)
    		.attr('fill', 'black')
    		.text('Population');

      g.selectAll('rect').data(data)
          .enter().append('rect')
          .attr('y', d => yScale(yValue(d)))
          .attr('width', d => xScale(xValue(d)))
          .attr('height', yScale.bandwidth());
    
  		g.append('text')
    		.attr('class', 'title')
    		.attr('y', -10)
    		.text('Top 10 Most Populous Countries');
  };

  d3.csv('data.csv').then(data => {
      data.forEach(d => {
          d.population = +d.population * 1000;
      });
      render(data);
  });

}(d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgc2VsZWN0LFxuICAgIGNzdixcbiAgICBzY2FsZUxpbmVhcixcbiAgICBtYXgsXG4gICAgc2NhbGVCYW5kLFxuICAgIGF4aXNMZWZ0LFxuICAgIGF4aXNCb3R0b20sXG4gIFx0Zm9ybWF0XG59IGZyb20gJ2QzJ1xuXG5jb25zdCBzdmcgPSBzZWxlY3QoJ3N2ZycpO1xuXG5jb25zdCB3aWR0aCA9ICtzdmcuYXR0cignd2lkdGgnKTtcbmNvbnN0IGhlaWdodCA9ICtzdmcuYXR0cignaGVpZ2h0Jyk7XG5cbmNvbnN0IHJlbmRlciA9IGRhdGEgPT4ge1xuICAgIGNvbnN0IHhWYWx1ZSA9IGQgPT4gZC5wb3B1bGF0aW9uO1xuICAgIGNvbnN0IHlWYWx1ZSA9IGQgPT4gZC5jb3VudHJ5O1xuICAgIGNvbnN0IG1hcmdpbiA9IHsgdG9wOiA1MCwgcmlnaHQ6IDQwLCBib3R0b206IDc1LCBsZWZ0OiAxNzAgfTtcbiAgICBjb25zdCBpbm5lcldpZHRoID0gd2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDtcbiAgICBjb25zdCBpbm5lckhlaWdodCA9IGhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xuXG4gICAgY29uc3QgeFNjYWxlID0gc2NhbGVMaW5lYXIoKVxuICAgICAgICAuZG9tYWluKFswLCBtYXgoZGF0YSwgeFZhbHVlKV0pXG4gICAgICAgIC5yYW5nZShbMCwgaW5uZXJXaWR0aF0pO1xuXG4gICAgY29uc3QgeVNjYWxlID0gc2NhbGVCYW5kKClcbiAgICAgICAgLmRvbWFpbihkYXRhLm1hcCh5VmFsdWUpKVxuICAgICAgICAucmFuZ2UoWzAsIGlubmVySGVpZ2h0XSlcbiAgICAgICAgLnBhZGRpbmcoMC4xKTtcblxuICAgIGNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJylcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHttYXJnaW4ubGVmdH0sJHttYXJnaW4udG9wfSlgKTtcblx0XHRcbiAgXHRjb25zdCB4QXhpc1RpY2tGb3JtYXQgPSBudW1iZXIgPT4gXG4gICAgXHRmb3JtYXQoJy4zcycpKG51bWJlcilcbiAgICBcdFx0LnJlcGxhY2UoJ0cnLCAnQicpO1xuICBcbiAgXHRjb25zdCB4QXhpcyA9IGF4aXNCb3R0b20oeFNjYWxlKVxuICAgIFx0LnRpY2tGb3JtYXQoeEF4aXNUaWNrRm9ybWF0KVxuICAgIFx0LnRpY2tTaXplKC0gaW5uZXJIZWlnaHQpO1xuICBcbiAgICBnLmFwcGVuZCgnZycpXG4gICAgICAuY2FsbChheGlzTGVmdCh5U2NhbGUpKVxuICBcdFx0LnNlbGVjdEFsbCgnLmRvbWFpbiwgLnRpY2sgbGluZScpXG4gIFx0XHRcdC5yZW1vdmUoKTtcbiAgXHRcbiAgICBjb25zdCB4QXhpc0cgPSBnLmFwcGVuZCgnZycpLmNhbGwoeEF4aXMpXG4gICAgXHQuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgwLCR7aW5uZXJIZWlnaHR9KWApO1xuICBcbiAgXHR4QXhpc0cuc2VsZWN0KCcuZG9tYWluJykucmVtb3ZlKCk7ICBcbiAgXG5cdFx0eEF4aXNHLmFwcGVuZCgndGV4dCcpXG4gIFx0XHQuYXR0cignY2xhc3MnLCAnYXhpcy1sYWJlbCcpXG4gIFx0XHQuYXR0cigneScsIDYwKVxuICBcdFx0LmF0dHIoJ3gnLCBpbm5lcldpZHRoIC8gMilcbiAgXHRcdC5hdHRyKCdmaWxsJywgJ2JsYWNrJylcbiAgXHRcdC50ZXh0KCdQb3B1bGF0aW9uJyk7XG5cbiAgICBnLnNlbGVjdEFsbCgncmVjdCcpLmRhdGEoZGF0YSlcbiAgICAgICAgLmVudGVyKCkuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmF0dHIoJ3knLCBkID0+IHlTY2FsZSh5VmFsdWUoZCkpKVxuICAgICAgICAuYXR0cignd2lkdGgnLCBkID0+IHhTY2FsZSh4VmFsdWUoZCkpKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgeVNjYWxlLmJhbmR3aWR0aCgpKTtcbiAgXG5cdFx0Zy5hcHBlbmQoJ3RleHQnKVxuICBcdFx0LmF0dHIoJ2NsYXNzJywgJ3RpdGxlJylcbiAgXHRcdC5hdHRyKCd5JywgLTEwKVxuICBcdFx0LnRleHQoJ1RvcCAxMCBNb3N0IFBvcHVsb3VzIENvdW50cmllcycpO1xufTtcblxuY3N2KCdkYXRhLmNzdicpLnRoZW4oZGF0YSA9PiB7XG4gICAgZGF0YS5mb3JFYWNoKGQgPT4ge1xuICAgICAgICBkLnBvcHVsYXRpb24gPSArZC5wb3B1bGF0aW9uICogMTAwMDtcbiAgICB9KTtcbiAgICByZW5kZXIoZGF0YSk7XG59KSJdLCJuYW1lcyI6WyJzZWxlY3QiLCJzY2FsZUxpbmVhciIsIm1heCIsInNjYWxlQmFuZCIsImZvcm1hdCIsImF4aXNCb3R0b20iLCJheGlzTGVmdCIsImNzdiJdLCJtYXBwaW5ncyI6Ijs7O0VBV0EsTUFBTSxHQUFHLEdBQUdBLFNBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMxQjtFQUNBLE1BQU0sS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztFQUNqQyxNQUFNLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbkM7RUFDQSxNQUFNLE1BQU0sR0FBRyxJQUFJLElBQUk7RUFDdkIsSUFBSSxNQUFNLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQztFQUNyQyxJQUFJLE1BQU0sTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDO0VBQ2xDLElBQUksTUFBTSxNQUFNLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUM7RUFDakUsSUFBSSxNQUFNLFVBQVUsR0FBRyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMs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